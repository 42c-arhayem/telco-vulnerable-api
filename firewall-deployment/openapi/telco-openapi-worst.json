{
  "openapi": "3.0.1",
  "info": {
    "title": "Worst Telco Vulnerable API",
    "version": "1.0.0",
    "description": "An intentionally vulnerable API inspired by TMF 622, designed to eventually showcase API security issues like BOLA,BOPLA, BFLA, and other OWASP API Top 10 vulnerabilities."
  },
  "servers": [
    {
      "url": "https://localhost:3000",
      "description": "Local development server"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "x-42c-accept-empty-security": true,
  "paths": {
    "/auth/login": {
      "post": {
        "summary": "User login",
        "operationId": "UserLogin",
        "description": "Authenticates a user with a username and password and returns a JWT token.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "$ref": "#/components/schemas/username"
                  },
                  "password": {
                    "$ref": "#/components/schemas/password"
                  }
                },
                "required": [
                  "username",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "token": {
                      "type": "string"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "username": {
                          "$ref": "#/components/schemas/username"
                        },
                        "password": {
                          "$ref": "#/components/schemas/password"
                        },
                        "email": {
                          "$ref": "#/components/schemas/email"
                        },
                        "isAdmin": {
                          "type": "boolean"
                        },
                        "customerId": {
                          "$ref": "#/components/schemas/customerId"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ResponseError400"
          },
          "401": {
            "$ref": "#/components/responses/ResponseError401"
          },
          "406": {
            "$ref": "#/components/responses/ResponseError406"
          },
          "415": {
            "$ref": "#/components/responses/ResponseError415"
          },
          "429": {
            "$ref": "#/components/responses/ResponseError429"
          },
          "500": {
            "$ref": "#/components/responses/ResponseError500"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        },
        "security": []
      }
    },
    "/auth/register": {
      "post": {
        "summary": "User registration",
        "operationId": "UserRegistration",
        "description": "Registers a new user with a username, password, and email.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "$ref": "#/components/schemas/username"
                  },
                  "password": {
                    "$ref": "#/components/schemas/password"
                  },
                  "email": {
                    "$ref": "#/components/schemas/email"
                  },
                  "address": {
                    "$ref": "#/components/schemas/address"
                  }
                },
                "required": [
                  "username",
                  "password",
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User registered successfully",
                      "pattern": "^User registered successfully$",
                      "minLength": 0,
                      "maxLength": 28
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "username": {
                          "$ref": "#/components/schemas/username"
                        },
                        "email": {
                          "$ref": "#/components/schemas/email"
                        },
                        "isAdmin": {
                          "type": "boolean",
                          "example": false
                        },
                        "customerId": {
                          "$ref": "#/components/schemas/customerId"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ResponseError400"
          },
          "401": {
            "$ref": "#/components/responses/ResponseError401"
          },
          "406": {
            "$ref": "#/components/responses/ResponseError406"
          },
          "415": {
            "$ref": "#/components/responses/ResponseError415"
          },
          "429": {
            "$ref": "#/components/responses/ResponseError429"
          },
          "500": {
            "$ref": "#/components/responses/ResponseError500"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        },
        "security": []
      }
    },
    "/auth/user/{username}": {
      "delete": {
        "summary": "Delete User",
        "operationId": "DeleteUser",
        "description": "Deletes a user by their username. Only the user themselves or an admin can perform this action.",
        "parameters": [
          {
            "$ref": "#/components/parameters/username"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/ResponseError403"
          },
          "404": {
            "description": "User not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/ResponseError500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/productOrder": {
      "post": {
        "summary": "Create Product Order",
        "operationId": "CreateProductOrder",
        "description": "Creates a new product order based on a product offering.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "productId": {
                    "$ref": "#/components/schemas/productId"
                  },
                  "quantity": {
                    "$ref": "#/components/schemas/quantity"
                  },
                  "customerId": {
                    "$ref": "#/components/schemas/customerId"
                  }
                },
                "required": [
                  "productId",
                  "quantity",
                  "customerId"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product order created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "orderId": {
                      "$ref": "#/components/schemas/orderId"
                    },
                    "message": {
                      "type": "string",
                      "example": "Order created successfully.",
                      "pattern": "^Order created successfully.$",
                      "minLength": 0,
                      "maxLength": 100
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ResponseError400"
          },
          "401": {
            "$ref": "#/components/responses/ResponseError401"
          },
          "403": {
            "$ref": "#/components/responses/ResponseError403"
          },
          "406": {
            "$ref": "#/components/responses/ResponseError406"
          },
          "415": {
            "$ref": "#/components/responses/ResponseError415"
          },
          "429": {
            "$ref": "#/components/responses/ResponseError429"
          },
          "500": {
            "$ref": "#/components/responses/ResponseError500"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "get": {
        "summary": "List Product Orders",
        "operationId": "ListProductOrders",
        "description": "Retrieves a list of all product orders.",
        "parameters": [
          {
            "$ref": "#/components/parameters/customerId"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter orders by status.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of product orders.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "orderId": {
                        "$ref": "#/components/schemas/orderId"
                      },
                      "productId": {
                        "$ref": "#/components/schemas/productId"
                      },
                      "quantity": {
                        "$ref": "#/components/schemas/quantity"
                      },
                      "status": {
                        "$ref": "#/components/schemas/status"
                      }
                    },
                    "additionalProperties": false
                  },
                  "maxItems": 4
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ResponseError400"
          },
          "401": {
            "$ref": "#/components/responses/ResponseError401"
          },
          "403": {
            "$ref": "#/components/responses/ResponseError403"
          },
          "406": {
            "$ref": "#/components/responses/ResponseError406"
          },
          "415": {
            "$ref": "#/components/responses/ResponseError415"
          },
          "429": {
            "$ref": "#/components/responses/ResponseError429"
          },
          "500": {
            "$ref": "#/components/responses/ResponseError500"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/productOrder/{orderId}": {
      "get": {
        "summary": "Retrieve Product Order",
        "operationId": "RetrieveProductOrder",
        "description": "Fetches details of a specific product order by ID.",
        "parameters": [
          {
            "$ref": "#/components/parameters/orderId"
          }
        ],
        "responses": {
          "200": {
            "description": "Product order details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "orderId": {
                      "$ref": "#/components/schemas/orderId"
                    },
                    "productId": {
                      "$ref": "#/components/schemas/productId"
                    },
                    "quantity": {
                      "$ref": "#/components/schemas/quantity"
                    },
                    "status": {
                      "$ref": "#/components/schemas/status"
                    },
                    "orderDate": {
                      "$ref": "#/components/schemas/orderDate"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ResponseError400"
          },
          "401": {
            "$ref": "#/components/responses/ResponseError401"
          },
          "403": {
            "$ref": "#/components/responses/ResponseError403"
          },
          "406": {
            "$ref": "#/components/responses/ResponseError406"
          },
          "415": {
            "$ref": "#/components/responses/ResponseError415"
          },
          "429": {
            "$ref": "#/components/responses/ResponseError429"
          },
          "500": {
            "$ref": "#/components/responses/ResponseError500"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "summary": "Update Product Order",
        "operationId": "UpdateProductOrder",
        "description": "Partially updates an existing product order.",
        "parameters": [
          {
            "$ref": "#/components/parameters/orderId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "quantity": {
                    "$ref": "#/components/schemas/quantity"
                  },
                  "productId": {
                    "$ref": "#/components/schemas/productId"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product order updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "order": {
                      "type": "object",
                      "properties": {
                        "orderId": {
                          "$ref": "#/components/schemas/orderId"
                        },
                        "quantity": {
                          "$ref": "#/components/schemas/quantity"
                        },
                        "priority": {
                          "$ref": "#/components/schemas/priority"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ResponseError400"
          },
          "401": {
            "$ref": "#/components/responses/ResponseError401"
          },
          "403": {
            "$ref": "#/components/responses/ResponseError403"
          },
          "406": {
            "$ref": "#/components/responses/ResponseError406"
          },
          "415": {
            "$ref": "#/components/responses/ResponseError415"
          },
          "429": {
            "$ref": "#/components/responses/ResponseError429"
          },
          "500": {
            "$ref": "#/components/responses/ResponseError500"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Cancel Product Order",
        "operationId": "CancelProductOrder",
        "description": "Cancels an existing product order by ID.",
        "parameters": [
          {
            "$ref": "#/components/parameters/orderId"
          }
        ],
        "responses": {
          "200": {
            "description": "Product order canceled successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ResponseError400"
          },
          "401": {
            "$ref": "#/components/responses/ResponseError401"
          },
          "403": {
            "$ref": "#/components/responses/ResponseError403"
          },
          "406": {
            "$ref": "#/components/responses/ResponseError406"
          },
          "415": {
            "$ref": "#/components/responses/ResponseError415"
          },
          "429": {
            "$ref": "#/components/responses/ResponseError429"
          },
          "500": {
            "$ref": "#/components/responses/ResponseError500"
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "parameters": {
      "orderId": {
        "name": "orderId",
        "description": "The ID of the order to retrieve.",
        "required": true,
        "in": "path",
        "schema": {
          "$ref": "#/components/schemas/orderId"
        }
      },
      "customerId": {
        "name": "customerId",
        "description": "The ID of the customer to filter orders.",
        "required": false,
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/customerId"
        }
      },
      "username": {
        "name": "username",
        "in": "path",
        "description": "The unique username of the user to delete.",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "username": {
        "type": "string"
      },
      "password": {
        "type": "string"
      },
      "email": {
        "type": "string"
      },
      "address": {
        "type": "object",
        "properties": {
          "street": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "postcode": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "productId": {
        "type": "string"
      },
      "customerId": {
        "type": "string"
      },
      "priority": {
        "type": "string"
      },
      "quantity": {
        "type": "integer"
      },
      "status": {
        "type": "string"
      },
      "orderId": {
        "type": "string"
      },
      "token": {
        "type": "string"
      },
      "orderDate": {
        "type": "string"
      },
      "MessageObject": {
        "type": "object",
        "properties": {
          "message": {
            "$ref": "#/components/schemas/ResponseMessage"
          }
        },
        "additionalProperties": false
      },
      "ResponseMessage": {
        "type": "string"
      }
    },
    "responses": {
      "DefaultErrorResponse": {
        "description": "Unexpected Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/MessageObject"
            }
          }
        }
      },
      "ResponseError400": {
        "description": "Invalid input data",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/MessageObject"
            }
          }
        }
      },
      "ResponseError401": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/MessageObject"
            }
          }
        }
      },
      "ResponseError403": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/MessageObject"
            }
          }
        }
      },
      "ResponseError404": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/MessageObject"
            }
          }
        }
      },
      "ResponseError406": {
        "description": "Not Acceptable",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/MessageObject"
            }
          }
        }
      },
      "ResponseError415": {
        "description": "Unsupported Media Type",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/MessageObject"
            }
          }
        }
      },
      "ResponseError429": {
        "description": "Too Many Requests",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/MessageObject"
            }
          }
        }
      },
      "ResponseError500": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/MessageObject"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}