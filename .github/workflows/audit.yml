name: Run Security Audit

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      platformUrl: 'https://demolabs.42crunch.cloud'
      X42C_API_TOKEN: ${{ secrets.API_KEY }}

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Perform API Security Audit
      - name: 42Crunch REST API Static Security Testing
        uses: 42Crunch/api-security-audit-action@v3
        with:
          api-token: ${{ env.X42C_API_TOKEN }}
          platform-url: ${{ env.platformUrl }}
          json-report: audit-action-report-${{ github.run_id }}.json

      # Extract API_UUIDs for all OpenAPI specs
      - name: Extract API UUIDs
        id: extract_api_uuids
        run: |
          # Initialize an empty file to store API UUIDs
          echo "[]" > api_uuids.json

          # Extract API UUIDs from the audit report
          for spec in $(jq -r 'keys[]' ${{ github.workspace }}/audit-action-report-${{ github.run_id }}.json); do
            apiId=$(jq -r ".audit.report[\"$spec\"].apiId" ${{ github.workspace }}/audit-action-report-${{ github.run_id }}.json)
            echo "Found API UUID for $spec: $apiId"
            jq ". += [{\"spec\": \"$spec\", \"apiId\": \"$apiId\"}]" api_uuids.json > tmp.json && mv tmp.json api_uuids.json
          done

          # Display the collected API UUIDs
          cat api_uuids.json

      # Upload API UUIDs as an artifact
      - name: Upload API UUIDs
        uses: actions/upload-artifact@v2
        with:
            name: api-uuids
            path: api_uuids.json